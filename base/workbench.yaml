---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ml-workbench-pvc
  namespace: ml  # Verrà dinamicamente sostituito da NAMESPACE
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: standard
---
apiVersion: kubeflow.org/v1
kind: Notebook
metadata:
  name: ml-workbench
  namespace: ml  # Questo sarà dinamico a runtime via fieldRef
  annotations:
    notebooks.opendatahub.io/inject-oauth: "true"
    notebooks.opendatahub.io/last-image-selection: s2i-generic-data-science-notebook:2023.2
    notebooks.opendatahub.io/last-size-selection: Small
    notebooks.opendatahub.io/oauth-logout-url: https://rhods-dashboard-redhat-ods-applications.$(NAMESPACE)/notebookLogout=ml-workbench
    opendatahub.io/accelerator-name: ""
    opendatahub.io/image-display-name: Standard Data Science
    openshift.io/description: ml-workbench
    openshift.io/display-name: ml-workbench
    backstage.io/kubernetes-id: ml-workbench
  labels:
    app: ml-workbench
    opendatahub.io/dashboard: "true"
    opendatahub.io/odh-managed: "true"
spec:
  template:
    spec:
      containers:
      - name: ml-workbench
        image: quay.io/modh/s2i-generic-data-science-notebook:2023.2
        imagePullPolicy: Always
        env:
          - name: NOTEBOOK_ARGS
            value: |-
              --ServerApp.port=8888
              --ServerApp.token=''
              --ServerApp.password=''
              --ServerApp.base_url=/notebook/$(NAMESPACE)/ml-workbench
              --ServerApp.quit_button=False
              --ServerApp.tornado_settings={"user":"stratus","hub_host":"https://rhods-dashboard-redhat-ods-applications.$(NAMESPACE)","hub_prefix":"/projects/$(NAMESPACE)"}
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        envFrom:
          - secretRef:
              name: ml-workbench-data-connection
        livenessProbe:
          httpGet:
            path: /notebook/$(NAMESPACE)/ml-workbench/api
            port: 8888
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /notebook/$(NAMESPACE)/ml-workbench/api
            port: 8888
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 1
        ports:
          - containerPort: 8888
            name: notebook-port
        volumeMounts:
          - name: ml-workbench-pvc
            mountPath: /opt/app-root/src
          - name: shm
            mountPath: /dev/shm
        resources:
          requests:
            cpu: "1"
            memory: 8Gi
          limits:
            cpu: "2"
            memory: 8Gi
      - name: oauth-proxy
        image: registry.redhat.io/openshift4/ose-oauth-proxy@sha256:4bef31eb993feb6f1096b51b4876c65a6fb1f4401fee97fa4f4542b6b7c9bc46
        imagePullPolicy: Always
        args:
          - --provider=openshift
          - --https-address=:8443
          - --http-address=
          - --openshift-service-account=ml-workbench
          - --cookie-secret-file=/etc/oauth/config/cookie_secret
          - --cookie-expire=24h0m0s
          - --tls-cert=/etc/tls/private/tls.crt
          - --tls-key=/etc/tls/private/tls.key
          - --upstream=http://localhost:8888
          - --upstream-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          - --email-domain=*
          - --skip-provider-button
          - --openshift-sar={"verb":"get","resource":"notebooks","resourceAPIGroup":"kubeflow.org","resourceName":"ml-workbench","namespace":"$(NAMESPACE)"}
          - --logout-url=https://rhods-dashboard-redhat-ods-applications.$(NAMESPACE)/notebookLogout=ml-workbench
        env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        ports:
          - containerPort: 8443
            name: oauth-proxy
        livenessProbe:
          httpGet:
            path: /oauth/healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /oauth/healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 100m
            memory: 64Mi
        volumeMounts:
          - name: oauth-config
            mountPath: /etc/oauth/config
          - name: tls-certificates
            mountPath: /etc/tls/private
      serviceAccountName: ml-workbench
      enableServiceLinks: false
      volumes:
        - name: ml-workbench-pvc
          persistentVolumeClaim:
            claimName: ml-workbench-pvc
        - name: shm
          emptyDir:
            medium: Memory
        - name: oauth-config
          secret:
            secretName: ml-workbench-oauth-config
            defaultMode: 420
        - name: tls-certificates
          secret:
            secretName: ml-workbench-tls
            defaultMode: 420
---
apiVersion: v1
kind: Secret
metadata:
  name: ml-workbench-data-connection
  namespace: ml
  labels:
    opendatahub.io/dashboard: 'true'
    opendatahub.io/managed: 'true'
  annotations:
    opendatahub.io/connection-type: s3
    openshift.io/display-name: ml-workbench-data-connection
stringData:
  AWS_ACCESS_KEY_ID: minio
  AWS_SECRET_ACCESS_KEY: minio123
  AWS_DEFAULT_REGION: us-east-1
  AWS_S3_BUCKET: workbench
  AWS_S3_ENDPOINT: https://minio-api-ml.apps.{{metadata.labels.cluster-domain}}
type: Opaque
