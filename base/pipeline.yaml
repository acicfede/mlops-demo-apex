apiVersion: kubeflow.org/v1beta1
kind: Pipeline
metadata:
  name: untitled1-test
  namespace: ml
spec:
  pipelineSpec:
    # --- BEGIN Elyra-generated pipeline spec (preserved from your input) ---
    components:
      comp-run-a-file:
        executorLabel: exec-run-a-file
      comp-run-a-file-2:
        executorLabel: exec-run-a-file-2
      comp-run-a-file-3:
        executorLabel: exec-run-a-file-3
    deploymentSpec:
      executors:
        exec-run-a-file:
          container:
            args:
            - 'sh -c "mkdir -p ./jupyter-work-dir && cd ./jupyter-work-dir"

              sh -c "[[ -e ''/opt/app-root/bin/utils/bootstrapper.py'' ]] && (echo ''bootstrapper.py
              file already exists''; cp ''/opt/app-root/bin/utils/bootstrapper.py'' .)
              || (echo ''Downloading https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/elyra/kfp/bootstrapper.py'';
              curl --fail -H ''Cache-Control: no-cache'' -L ''https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/elyra/kfp/bootstrapper.py''
              --output bootstrapper.py)"

              sh -c "[[ -e ''/opt/app-root/bin/utils/requirements-elyra.txt'' ]] && (echo
              ''requirements-elyra.txt file already exists''; cp ''/opt/app-root/bin/utils/requirements-elyra.txt''
              .) || (echo ''Downloading https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/etc/generic/requirements-elyra.txt'';
              curl --fail -H ''Cache-Control: no-cache'' -L ''https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/etc/generic/requirements-elyra.txt''
              --output requirements-elyra.txt)"

              sh -c "python3 -m pip install  packaging && python3 -m pip freeze > requirements-current.txt
              && python3 bootstrapper.py --pipeline-name ''untitled1'' --cos-endpoint
              ''https://minio-api-ml.apps.privateailab.acic.accenture'' --cos-bucket ''mlpipeline-artifacts''
              --cos-directory ''untitled1-1024150021'' --cos-dependencies-archive ''Part
              1 - Data Cleaning-ef9b9501-27a3-4700-a2bf-39909d67c0be.tar.gz'' --file ''examples/pipelines/run-generic-pipelines-on-kubeflow-pipelines/Part
              1 - Data Cleaning.ipynb'' "

              '
            command:
            - sh
            - -c
            env:
            - name: ELYRA_RUNTIME_ENV
              value: kfp
            - name: ELYRA_ENABLE_PIPELINE_INFO
              value: 'True'
            - name: ELYRA_WRITABLE_CONTAINER_DIR
              value: /tmp
            - name: ELYRA_RUN_NAME
              value: '{{workflow.uid}}'
            image: quay.io/modh/runtime-images@sha256:2932e07edbcbc54e68959cc6bc5c16c6b07766453a3ac655bdc33b844108c541
        exec-run-a-file-2:
          container:
            args:
            - 'sh -c "mkdir -p ./jupyter-work-dir && cd ./jupyter-work-dir"

              sh -c "[[ -e ''/opt/app-root/bin/utils/bootstrapper.py'' ]] && (echo ''bootstrapper.py
              file already exists''; cp ''/opt/app-root/bin/utils/bootstrapper.py'' .)
              || (echo ''Downloading https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/elyra/kfp/bootstrapper.py'';
              curl --fail -H ''Cache-Control: no-cache'' -L ''https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/elyra/kfp/bootstrapper.py''
              --output bootstrapper.py)"

              sh -c "[[ -e ''/opt/app-root/bin/utils/requirements-elyra.txt'' ]] && (echo
              ''requirements-elyra.txt file already exists''; cp ''/opt/app-root/bin/utils/requirements-elyra.txt''
              .) || (echo ''Downloading https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/etc/generic/requirements-elyra.txt'';
              curl --fail -H ''Cache-Control: no-cache'' -L ''https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/etc/generic/requirements-elyra.txt''
              --output requirements-elyra.txt)"

              sh -c "python3 -m pip install  packaging && python3 -m pip freeze > requirements-current.txt
              && python3 bootstrapper.py --pipeline-name ''untitled1'' --cos-endpoint
              ''https://minio-api-ml.apps.privateailab.acic.accenture'' --cos-bucket ''mlpipeline-artifacts''
              --cos-directory ''untitled1-1024150021'' --cos-dependencies-archive ''Part
              2 - Data Analysis-a54a8b17-8b07-4309-83ff-5aab4b62b6ad.tar.gz'' --file ''examples/pipelines/run-generic-pipelines-on-kubeflow-pipelines/Part
              2 - Data Analysis.ipynb'' "

              '
            command:
            - sh
            - -c
            env:
            - name: ELYRA_RUNTIME_ENV
              value: kfp
            - name: ELYRA_ENABLE_PIPELINE_INFO
              value: 'True'
            - name: ELYRA_WRITABLE_CONTAINER_DIR
              value: /tmp
            - name: ELYRA_RUN_NAME
              value: '{{workflow.uid}}'
            image: quay.io/modh/runtime-images@sha256:2932e07edbcbc54e68959cc6bc5c16c6b07766453a3ac655bdc33b844108c541
        exec-run-a-file-3:
          container:
            args:
            - 'sh -c "mkdir -p ./jupyter-work-dir && cd ./jupyter-work-dir"

              sh -c "[[ -e ''/opt/app-root/bin/utils/bootstrapper.py'' ]] && (echo ''bootstrapper.py
              file already exists''; cp ''/opt/app-root/bin/utils/bootstrapper.py'' .)
              || (echo ''Downloading https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/elyra/kfp/bootstrapper.py'';
              curl --fail -H ''Cache-Control: no-cache'' -L ''https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/elyra/kfp/bootstrapper.py''
              --output bootstrapper.py)"

              sh -c "[[ -e ''/opt/app-root/bin/utils/requirements-elyra.txt'' ]] && (echo
              ''requirements-elyra.txt file already exists''; cp ''/opt/app-root/bin/utils/requirements-elyra.txt''
              .) || (echo ''Downloading https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/etc/generic/requirements-elyra.txt'';
              curl --fail -H ''Cache-Control: no-cache'' -L ''https://raw.githubusercontent.com/opendatahub-io/elyra/v4.2.0/etc/generic/requirements-elyra.txt''
              --output requirements-elyra.txt)"

              sh -c "python3 -m pip install  packaging && python3 -m pip freeze > requirements-current.txt
              && python3 bootstrapper.py --pipeline-name ''untitled1'' --cos-endpoint
              ''https://minio-api-ml.apps.privateailab.acic.accenture'' --cos-bucket ''mlpipeline-artifacts''
              --cos-directory ''untitled1-1024150021'' --cos-dependencies-archive ''Part
              3 - Time Series Forecasting-3009c883-57ce-477d-9fc5-ce1a6f0a113b.tar.gz''
              --file ''examples/pipelines/run-generic-pipelines-on-kubeflow-pipelines/Part
              3 - Time Series Forecasting.ipynb'' "

              '
            command:
            - sh
            - -c
            env:
            - name: ELYRA_RUNTIME_ENV
              value: kfp
            - name: ELYRA_ENABLE_PIPELINE_INFO
              value: 'True'
            - name: ELYRA_WRITABLE_CONTAINER_DIR
              value: /tmp
            - name: ELYRA_RUN_NAME
              value: '{{workflow.uid}}'
            image: quay.io/modh/runtime-images@sha256:2932e07edbcbc54e68959cc6bc5c16c6b07766453a3ac655bdc33b844108c541
    pipelineInfo:
      name: untitled1
    root:
      dag:
        tasks:
          run-a-file:
            cachingOptions:
              enableCache: true
            componentRef:
              name: comp-run-a-file
            taskInfo:
              name: Part 1 - Data Cleaning
          run-a-file-2:
            cachingOptions:
              enableCache: true
            componentRef:
              name: comp-run-a-file-2
            dependentTasks:
            - run-a-file
            taskInfo:
              name: Part 2 - Data Analysis
          run-a-file-3:
            cachingOptions:
              enableCache: true
            componentRef:
              name: comp-run-a-file-3
            dependentTasks:
            - run-a-file-2
            taskInfo:
              name: Part 3 - Time Series Forecasting
    schemaVersion: 2.1.0
    sdkVersion: kfp-2.9.0
    # --- END Elyra-generated pipeline spec ---
    # additional platform-specific metadata (preserved)
    platforms:
      kubernetes:
        deploymentSpec:
          executors:
            exec-run-a-file:
              podMetadata:
                annotations:
                  elyra/node-file-name: "examples/pipelines/run-generic-pipelines-on-kubeflow-pipelines/Part 1 - Data Cleaning.ipynb"
                  elyra/pipeline-source: untitled1.pipeline
                labels:
                  elyra/experiment-name: ''
                  elyra/node-name: Part_1_-_Data_Cleaning
                  elyra/node-type: notebook-script
                  elyra/pipeline-name: untitled1
                  elyra/pipeline-version: ''
              secretAsEnv:
              - keyToEnv:
                - envVar: AWS_ACCESS_KEY_ID
                  secretKey: AWS_ACCESS_KEY_ID
                - envVar: AWS_SECRET_ACCESS_KEY
                  secretKey: AWS_SECRET_ACCESS_KEY
                secretName: minio-secret
            exec-run-a-file-2:
              podMetadata:
                annotations:
                  elyra/node-file-name: "examples/pipelines/run-generic-pipelines-on-kubeflow-pipelines/Part 2 - Data Analysis.ipynb"
                  elyra/pipeline-source: untitled1.pipeline
                labels:
                  elyra/experiment-name: ''
                  elyra/node-name: Part_2_-_Data_Analysis
                  elyra/node-type: notebook-script
                  elyra/pipeline-name: untitled1
                  elyra/pipeline-version: ''
              secretAsEnv:
              - keyToEnv:
                - envVar: AWS_ACCESS_KEY_ID
                  secretKey: AWS_ACCESS_KEY_ID
                - envVar: AWS_SECRET_ACCESS_KEY
                  secretKey: AWS_SECRET_ACCESS_KEY
                secretName: minio-secret
            exec-run-a-file-3:
              podMetadata:
                annotations:
                  elyra/node-file-name: "examples/pipelines/run-generic-pipelines-on-kubeflow-pipelines/Part 3 - Time Series Forecasting.ipynb"
                  elyra/pipeline-source: untitled1.pipeline
                labels:
                  elyra/experiment-name: ''
                  elyra/node-name: Part_3_-_Time_Series_Forecasting
                  elyra/node-type: notebook-script
                  elyra/pipeline-name: untitled1
                  elyra/pipeline-version: ''
              secretAsEnv:
              - keyToEnv:
                - envVar: AWS_ACCESS_KEY_ID
                  secretKey: AWS_ACCESS_KEY_ID
                - envVar: AWS_SECRET_ACCESS_KEY
                  secretKey: AWS_SECRET_ACCESS_KEY
                secretName: minio-secret
